import fetch from "node-fetch";
import { neon, neonConfig } from "@neondatabase/serverless";
import { drizzle } from "drizzle-orm/neon-http";
import * as schema from "@shared/schema";

// ‚öôÔ∏è Important pour O2switch : fournir une impl√©mentation de fetch
neonConfig.fetchImplementation = fetch;

if (!process.env.DATABASE_URL) {
  throw new Error("DATABASE_URL must be d√©fini dans les variables d'environnement !");
}

// Nettoyer l'URL (pour √©viter caract√®res encod√©s)
const cleanDatabaseUrl = process.env.DATABASE_URL
  .trim()
  .replace(/&amp;/g, "&")
  .replace(/&lt;/g, "<")
  .replace(/&gt;/g, ">")
  .replace(/&quot;/g, '"')
  .replace(/&#39;/g, "'");

// üîç Log de diagnostic pour v√©rifier la configuration de la branche
console.log("üîå Initialisation de la connexion √† la base de donn√©es...");
console.log("üìç Environnement:", process.env.NODE_ENV || "non d√©fini");

// Extraire et afficher la branche si pr√©sente dans l'URL
const urlMatch = cleanDatabaseUrl.match(/branch=([^&\s]+)/);
const neonBranchMatch = cleanDatabaseUrl.match(/neon\.branch=([^&\s]+)/);
const detectedBranch = neonBranchMatch?.[1] || urlMatch?.[1] || "main (par d√©faut)";
console.log("üåø Branche Neon d√©tect√©e:", detectedBranch);

// üîê Connexion HTTPS via Neon
const sql = neon(cleanDatabaseUrl);

// Initialisation de Drizzle ORM
export const db = drizzle(sql, { schema });
